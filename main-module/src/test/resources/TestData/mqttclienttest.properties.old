# Configuration for the mqtt test client client
# mqttclienttest.properties

# useRepeatTimer If true the test will use a timer to send data. 
# The timer is repeats at the number of seconds set by org.opennms.plugin.mqttclient.message.persist.interval
org.opennms.plugin.mqttclient.test.useRepeatTimer = true

# useJsonFile if true the data is taken from a supplied json file
org.opennms.plugin.mqttclient.test.useJsonFile = true;

org.opennms.plugin.mqttclient.test.jsonFileName = /src/test/resources/testData2.json

# These interval and RRA definitions are always needed but primarily apply if data is stored in rrd files
# As with rrd definitions the interval sets the time interval in seconds between collections (300 = 5 mins) 
org.opennms.plugin.mqttclient.message.persist.interval=300

# brokerUrl. url of broker to connect to. the Paho client supports two types of connection 
# tcp:// for a TCP connection and ssl:// for a TCP connection secured by SSL/TLS. 
# For example: tcp://localhost:1883 or ssl://localhost:8883

org.opennms.plugin.mqttclient.brokerUrl=tcp://139.162.227.142:1883

# clientId. Note that this must be a unique id from the point of view of the broker
org.opennms.plugin.mqttclient.clientId=testclient

# userName to connect to the broker. If left empty anonymous connection will be attempted
org.opennms.plugin.mqttclient.userName=mqtt-user


# password to connect to the broker. If left empty a password will not be sent
org.opennms.plugin.mqttclient.password=mqtt-password


# If opennms fails to connect to the broker, interval (ms) before re attempting connection
org.opennms.plugin.mqttclient.connectionRetryInterval=30000


# Qos of connection to event and data topics
org.opennms.plugin.mqttclient.qos=0


# mqtt-events=Topic on which OpenNMS will listen for mqtt messages to be turned into events
# mqtt-data Topic on which OpenNMS will listen for mqtt messages to be turned into performance data
# topic on which to send data or events
org.opennms.plugin.mqttclient.test.topic=mqtt-data

# time format pattern. Determines how json date time is interpreted  
# yyyy-MM-dd HH:mm:ss.SSSSSS works with 2017-10-19 10:15:02.854888
# see https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html#patterns for other examples
org.opennms.plugin.mqttclient.message.time-format-pattern=yyyy-MM-dd HH:mm:ss.SSSSSS


# time zone offset used by time received in message
# see https://docs.oracle.com/javase/8/docs/api/java/time/ZoneOffset.html#of-java.lang.String-  for other examples
# set to empty property = use local time zone
org.opennms.plugin.mqttclient.message.time-zone-offset=

